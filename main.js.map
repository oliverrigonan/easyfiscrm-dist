{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app-settings.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.activate.ts","webpack:///./src/app/software/software-route-reuse-strategy.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./account/account.module\": [\n\t\t\"./src/app/account/account.module.ts\",\n\t\t\"default~account-account-module~software-software-module\",\n\t\t\"account-account-module\"\n\t],\n\t\"./landing/landing.module\": [\n\t\t\"./src/app/landing/landing.module.ts\",\n\t\t\"landing-landing-module\"\n\t],\n\t\"./software/software.module\": [\n\t\t\"./src/app/software/software.module.ts\",\n\t\t\"default~account-account-module~software-software-module\",\n\t\t\"software-software-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', loadChildren: './account/account.module#AccountModule' },\r\n  { path: 'landing', loadChildren: './landing/landing.module#LandingModule' },\r\n  { path: 'account', loadChildren: './account/account.module#AccountModule' },\r\n  { path: 'software', loadChildren: './software/software.module#SoftwareModule' },\r\n  { path: 'software', loadChildren: './account/account.module#AccountModule' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","export class AppSettings {\r\n    // public defaultAPIURLHost: string = \"http://localhost:53129\";\r\n    public defaultAPIURLHost: string = \"https://easyfiscrm-easyfis-api.azurewebsites.net\";\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'easyfiscrm-ui';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppSettings } from './app-settings';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppRouterActivate } from './app.router.activate';\r\nimport { CurrencyPipe } from '@angular/common';\r\n\r\nimport { RouterModule, Routes, RouteReuseStrategy } from '@angular/router';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SoftwareRouteReuseStrategy } from './software/software-route-reuse-strategy';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    AppSettings,\r\n    AppRouterActivate,\r\n    CurrencyPipe,\r\n    { provide: RouteReuseStrategy, useClass: SoftwareRouteReuseStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AppRouterActivate implements CanActivate {\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    if (localStorage.getItem(\"access_token\") != null) {\r\n      this.router.navigate([\"/software\"]);\r\n      \r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}","import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from \"@angular/router\";\r\n\r\nexport class SoftwareRouteReuseStrategy implements RouteReuseStrategy {\r\n\r\n    private handlers: { [key: string]: DetachedRouteHandle } = {};\r\n\r\n    constructor() { }\r\n\r\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n        return true;\r\n    }\r\n\r\n    store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\r\n        switch (route.routeConfig.path) {\r\n            case 'setup/product/detail/:id': break;\r\n            case 'trn/lead/detail/:id': break;\r\n            case 'trn/sales/detail/:id': break;\r\n            case 'trn/support/detail/:id': break;\r\n            case 'trn/lead/:startDate/:endDate/:status/:userId/:dashboard': break;\r\n            case 'trn/sales/:startDate/:endDate/:status/:userId/:dashboard': break;\r\n            case 'trn/support/:startDate/:endDate/:status/:userId/:dashboard': break;\r\n            case 'setup/product': break;\r\n            default: {\r\n                this.handlers[route.routeConfig.path] = handle;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n        return !!route.routeConfig && !!this.handlers[route.routeConfig.path];\r\n    }\r\n\r\n    retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\r\n        if (!route.routeConfig) return null;\r\n        return this.handlers[route.routeConfig.path];\r\n    }\r\n\r\n    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n        return future.routeConfig === curr.routeConfig;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}